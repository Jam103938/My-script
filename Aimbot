local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Ultimate Silent Aim & ESP Hub", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionConfig"})

local ESPEnabled = false
local TeamESPEnabled = false
local SilentAimEnabled = false
local WallCheck = false
local NoRecoil = false
local BypassWalkspeedAntiCheat = false
local AimPart = "Head"

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera

local function CreateESP(player)
    local highlight = Instance.new("Highlight", player.Character)
    highlight.FillColor = Color3.fromRGB(255, 255, 255) -- Initial white color for rainbow effect
    highlight.OutlineColor = Color3.new(0, 0, 0)
    highlight.FillTransparency = 0.7
    highlight.OutlineTransparency = 0.7
    highlight.Name = "ESPHighlight"

    RunService.RenderStepped:Connect(function()
        local hue = tick() % 5 / 5 -- Create a hue that changes over time
        highlight.FillColor = Color3.fromHSV(hue, 1, 1)
    end)
end

local function EnableESP()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and not player.Character:FindFirstChild("ESPHighlight") then
            CreateESP(player)
        end
    end
    Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function()
            if ESPEnabled then
                CreateESP(player)
            end
        end)
    end)
end

local function DisableESP()
    for _, player in pairs(Players:GetPlayers()) do
        if player.Character then
            for _, obj in pairs(player.Character:GetChildren()) do
                if obj:IsA("Highlight") then
                    obj:Destroy()
                end
            end
        end
    end
end

local function EnableTeamESP()
    for _, player in pairs(Players:GetPlayers()) do
        if player.Team ~= LocalPlayer.Team and player.Character and not player.Character:FindFirstChild("ESPHighlight") then
            CreateESP(player)
        end
    end
end

local function DisableTeamESP()
    for _, player in pairs(Players:GetPlayers()) do
        if player.Team ~= LocalPlayer.Team and player.Character then
            for _, obj in pairs(player.Character:GetChildren()) do
                if obj:IsA("Highlight") then
                    obj:Destroy()
                end
            end
        end
    end
end

local function EnableNoRecoil()
    -- No recoil implementation (example, might need to be adjusted per game)
    for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
        if tool:FindFirstChild("Recoil") then
            tool.Recoil:Destroy()
        end
    end
end

local function DisableNoRecoil()
    -- Recoil restoration not possible once destroyed; usually need to reset game to restore
end

local function EnableBypassWalkspeedAntiCheat()
    -- Bypass walk speed anti-cheat implementation (example, might need to be adjusted per game)
    LocalPlayer.Character.Humanoid.WalkSpeed = 50
end

local function DisableBypassWalkspeedAntiCheat()
    -- Revert walk speed to normal
    LocalPlayer.Character.Humanoid.WalkSpeed = 16
end

local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(AimPart) then
            local partPos = Camera:WorldToScreenPoint(player.Character[AimPart].Position)
            local mousePos = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
            local distance = (Vector2.new(partPos.X, partPos.Y) - mousePos).magnitude

            if distance < shortestDistance then
                shortestDistance = distance
                closestPlayer = player
            end
        end
    end

    return closestPlayer
end

RunService.RenderStepped:Connect(function()
    if SilentAimEnabled then
        local target = getClosestPlayer()
        if target and target.Character and target.Character:FindFirstChild(AimPart) then
            local targetPos = target.Character[AimPart].Position
            if WallCheck then
                local ray = Ray.new(LocalPlayer.Character.Head.Position, (targetPos - LocalPlayer.Character.Head.Position).unit * 300)
                local part, position = workspace:FindPartOnRay(ray, LocalPlayer.Character, false, true)
                if part and part:IsDescendantOf(target.Character) then
                    Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPos)
                end
            else
                Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPos)
            end
        end
    end
end)

local ESPSection = Window:MakeTab({
    Name = "ESP Settings",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local SilentAimSection = Window:MakeTab({
    Name = "Silent Aim Settings",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

ESPSection:AddToggle({
    Name = "Enable ESP",
    Default = false,
    Callback = function(state)
        ESPEnabled = state
        if ESPEnabled then
            EnableESP()
        else
            DisableESP()
        end
    end
})

ESPSection:AddToggle({
    Name = "Enable Team ESP",
    Default = false,
    Callback = function(state)
        TeamESPEnabled = state
        if TeamESPEnabled then
            EnableTeamESP()
        else
            DisableTeamESP()
        end
    end
})

ESPSection:AddToggle({
    Name = "Team Toggle",
    Default = false,
    Callback = function(state)
        TeamESPEnabled = state
        if TeamESPEnabled then
            EnableTeamESP()
        else
            DisableTeamESP()
        end
    end
})

SilentAimSection:AddDropdown({
    Name = "Aim Part",
    Default = "Head",
    Options = {"Head", "HumanoidRootPart"},
    Callback = function(value)
        AimPart = value
    end
})

SilentAimSection:AddToggle({
    Name = "Wall Check",
    Default = false,
    Callback = function(state)
        WallCheck = state
    end
})

SilentAimSection:AddToggle({
    Name = "Silent Aim",
    Default = false,
    Callback = function(state)
        SilentAimEnabled = state
    end
})

SilentAimSection:AddToggle({
    Name = "No Recoil",
    Default = false,
    Callback = function(state)
        NoRecoil = state
        if NoRecoil then
            EnableNoRecoil()
        else
            DisableNoRecoil()
        end
    end
})

SilentAimSection:AddToggle({
    Name = "Bypass Walkspeed Anti-Cheat",
    Default = false,
    Callback = function(state)
        BypassWalkspeedAntiCheat = state
        if BypassWalkspeedAntiCheat then
            EnableBypassWalkspeedAntiCheat()
        else
            DisableBypassWalkspeedAntiCheat()
        end
    end
})

OrionLib:Init()
